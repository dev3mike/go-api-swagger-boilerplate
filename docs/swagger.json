{
    "swagger": "2.0",
    "info": {
        "description": "Add your api description here",
        "title": "GO Backend API Boilerplate",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/": {
            "get": {
                "description": "Responds with a welcome message for the API",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sample API"
                ],
                "summary": "Get a welcome message",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.ResponseDTO"
                        }
                    }
                }
            }
        },
        "/webhooks/clerk/create": {
            "post": {
                "description": "This endpoint processes a create user event and creates a user profile based on the event data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clerk Webhooks"
                ],
                "summary": "Create User Event",
                "parameters": [
                    {
                        "description": "Clerk Event Data",
                        "name": "ClerkEventDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.ClerkEventDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apierror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apierror.ErrResponse"
                        }
                    }
                }
            }
        },
        "/webhooks/clerk/update": {
            "post": {
                "description": "This endpoint processes an update user event and updates the user profile based on the event data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clerk Webhooks"
                ],
                "summary": "Update User Event",
                "parameters": [
                    {
                        "description": "Clerk Event Data",
                        "name": "ClerkEventDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.ClerkEventDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apierror.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apierror.ErrResponse"
                        }
                    }
                }
            }
        },
        "/{username}": {
            "post": {
                "description": "Takes a username from the URL and returns a profile if the username is valid",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sample API"
                ],
                "summary": "Post a username and get a profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.ProfileResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/apierror.ErrResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apierror.ErrResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "user-level error code",
                    "type": "string"
                },
                "error": {
                    "description": "application-level error message, for debugging",
                    "type": "string"
                },
                "message": {
                    "description": "user-level status message",
                    "type": "string"
                }
            }
        },
        "dtos.ClerkEventData": {
            "type": "object",
            "properties": {
                "backup_code_enabled": {
                    "type": "boolean"
                },
                "banned": {
                    "type": "boolean"
                },
                "create_organization_enabled": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "integer"
                },
                "delete_self_enabled": {
                    "type": "boolean"
                },
                "email_addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.ClerkEventEmailAddress"
                    }
                },
                "external_accounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.ClerkEventExternalAccount"
                    }
                },
                "external_id": {},
                "first_name": {
                    "type": "string"
                },
                "has_image": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "last_active_at": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "last_sign_in_at": {},
                "locked": {
                    "type": "boolean"
                },
                "lockout_expires_in_seconds": {},
                "object": {
                    "type": "string"
                },
                "passkeys": {
                    "type": "array",
                    "items": {}
                },
                "password_enabled": {
                    "type": "boolean"
                },
                "phone_numbers": {
                    "type": "array",
                    "items": {}
                },
                "primary_email_address_id": {
                    "type": "string"
                },
                "primary_phone_number_id": {},
                "primary_web3_wallet_id": {},
                "private_metadata": {},
                "profile_image_url": {
                    "type": "string"
                },
                "public_metadata": {},
                "saml_accounts": {
                    "type": "array",
                    "items": {}
                },
                "totp_enabled": {
                    "type": "boolean"
                },
                "two_factor_enabled": {
                    "type": "boolean"
                },
                "unsafe_metadata": {},
                "updated_at": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                },
                "verification_attempts_remaining": {
                    "type": "integer"
                },
                "web3_wallets": {
                    "type": "array",
                    "items": {}
                }
            }
        },
        "dtos.ClerkEventDto": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.ClerkEventData"
                },
                "object": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dtos.ClerkEventEmailAddress": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer"
                },
                "email_address": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "linked_to": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.ClerkEventLinkedTo"
                    }
                },
                "object": {
                    "type": "string"
                },
                "reserved": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "integer"
                },
                "verification": {
                    "$ref": "#/definitions/dtos.ClerkEventVerification"
                }
            }
        },
        "dtos.ClerkEventExternalAccount": {
            "type": "object",
            "properties": {
                "approved_scopes": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "email_address": {
                    "type": "string"
                },
                "family_name": {
                    "type": "string"
                },
                "given_name": {
                    "type": "string"
                },
                "google_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "label": {},
                "object": {
                    "type": "string"
                },
                "picture": {
                    "type": "string"
                },
                "public_metadata": {},
                "updated_at": {
                    "type": "integer"
                },
                "username": {},
                "verification": {
                    "$ref": "#/definitions/dtos.ClerkEventVerification"
                }
            }
        },
        "dtos.ClerkEventLinkedTo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dtos.ClerkEventVerification": {
            "type": "object",
            "properties": {
                "attempts": {},
                "expire_at": {},
                "status": {
                    "type": "string"
                },
                "strategy": {
                    "type": "string"
                }
            }
        },
        "dtos.ProfileResponseDTO": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "profile_image": {
                    "type": "string"
                }
            }
        },
        "dtos.ResponseDTO": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    }
}